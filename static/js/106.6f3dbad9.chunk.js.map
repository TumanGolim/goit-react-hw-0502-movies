{"version":3,"file":"static/js/106.6f3dbad9.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst API_KEY = '6275ff62c216e0d575843f8efbbe5c76';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [activeTab, setActiveTab] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovieDetails(null);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const fetchMovieCast = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n      setActiveTab('cast');\n    } catch (error) {\n      console.error('Error fetching movie cast:', error);\n      setCast([]);\n    }\n  };\n\n  const fetchMovieReviews = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      setReviews(response.data.results);\n      setActiveTab('reviews');\n    } catch (error) {\n      console.error('Error fetching movie reviews:', error);\n      setReviews([]);\n    }\n  };\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const {\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n    runtime,\n    poster_path,\n  } = movieDetails;\n\n  const posterUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <div>\n      <div>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/movies\">Movies</Link>\n      </div>\n      <Link to=\"/\">Go back</Link>\n      \n      <h2>{title}</h2>\n      <img src={posterUrl} alt={`${title} Poster`} />\n      <p>User Score: {vote_average * 10}%</p>\n      <p>Overview: {overview}</p>\n      <p>Genres: {genres.map(genre => genre.name).join(', ')}</p>\n      <p>Release Date: {release_date}</p>\n      <p>Runtime: {runtime} minutes</p>\n<h3>Additional information</h3>\n      <button onClick={fetchMovieCast}>Cast</button> <br />\n      <button onClick={fetchMovieReviews}>Reviews</button>\n\n      {activeTab === 'cast' && (\n        <div>\n          <h2>Movie Cast</h2>\n          <ul>\n            {cast.map(actor => (\n              <li key={actor.id}>{actor.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {activeTab === 'reviews' && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","cast","setCast","_useState5","_useState6","reviews","setReviews","_useState7","_useState8","activeTab","setActiveTab","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","apply","arguments","fetchMovieCast","_ref2","_callee2","_context2","fetchMovieReviews","_ref3","_callee3","_context3","results","_jsx","children","title","vote_average","overview","genres","release_date","runtime","poster_path","posterUrl","_jsxs","Link","to","src","alt","map","genre","name","join","onClick","actor","id","review","author","content"],"sourceRoot":""}